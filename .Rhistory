dplyr::filter(variable %in% input$depth_variable,
Lake %in% input$depth_lake)
})
output$lake_depth_boxplot <- renderPlot({
ggplot(depth_data(),aes(y=value,x=Lake,color=Depth))+
geom_boxplot()+
theme_classic(base_size=14)
})
chloride_data <- reactive({
waterchem_v2 %>%
pivot_wider(names_from=variable,values_from=value) %>%
pivot_longer(!c(Lake,Date,Depth,`Cl- (mg/L)`),names_to="variable") %>%
mutate(`Cl- (mg/L)`=as.numeric(`Cl- (mg/L)`),
value=as.numeric(value)) %>%
dplyr::filter(variable %in% input$variable_chloride,
Depth %in% input$depth_chloride)
})
output$chloride_plot <- renderPlot({
ggplot(chloride_data(),aes(x=`Cl- (mg/L)`, y=input$variable_chloride, color=input$depth_chloride))+
geom_point()+
theme_classic(base_size=14)
})
# output$chloride_plot2 <- renderPlot({
#   ggplot(data= waterchem_v2,
#          aes(x=chloride_mg_L, y=!!input$y_variable_chloride2, color=Depth))+
#     geom_point()+
#     facet_wrap(~Risk_Level, nrow=2) +
#     theme_classic(base_size=14)
# }) #trying to make a plot faceted by risk level, doesn't work yet
}
shinyApp(ui, server)
server <- function(input, output, session) {
output$map <- renderImage({
list(
src = file.path("Picture1.png"),
contentType = "png",
width = 1000,
height = 500
)
}, deleteFile = FALSE)
time_data <- reactive({
waterchem_v2 %>%
dplyr::filter(variable %in% input$time_variable,
Lake %in% input$time_lake)
})
output$timeseriesplot <- renderPlot({
ggplot(time_data(),aes(x=Date,y=value,color=Lake,shape=Depth))+
geom_point(size=3)+
theme_classic(base_size=14)
})
depth_data <- reactive({
waterchem_v2 %>%
dplyr::filter(variable %in% input$depth_variable,
Lake %in% input$depth_lake)
})
output$lake_depth_boxplot <- renderPlot({
ggplot(depth_data(),aes(y=value,x=Lake,color=Depth))+
geom_boxplot()+
theme_classic(base_size=14)
})
chloride_data <- reactive({
waterchem_v2 %>%
pivot_wider(names_from=variable,values_from=value) %>%
pivot_longer(!c(Lake,Date,Depth,`Cl- (mg/L)`),names_to="variable") %>%
mutate(`Cl- (mg/L)`=as.numeric(`Cl- (mg/L)`),
value=as.numeric(value)) %>%
dplyr::filter(variable %in% input$variable_chloride,
Depth %in% input$depth_chloride)
})
output$chloride_plot <- renderPlot({
ggplot(chloride_data(),aes(x=`Cl- (mg/L)`, y=value, color=Depth))+
geom_point()+
theme_classic(base_size=14)
})
# output$chloride_plot2 <- renderPlot({
#   ggplot(data= waterchem_v2,
#          aes(x=chloride_mg_L, y=!!input$y_variable_chloride2, color=Depth))+
#     geom_point()+
#     facet_wrap(~Risk_Level, nrow=2) +
#     theme_classic(base_size=14)
# }) #trying to make a plot faceted by risk level, doesn't work yet
}
shinyApp(ui, server)
variables[-`Cl- (mg/L)`]
variables
ui <- fluidPage(
titlePanel("Water chemistry data collected as part of the LCCMR - Salty Lakes project"),
tabsetPanel(
tabPanel("Site Locations",
p("There are 12 study lakes located across the Twin Cities metro area."),
imageOutput("map")
),
tabPanel("Monitoring data exploration",
#side bar layout allows you to add box on the side of the page, good for plotting
sidebarLayout(
sidebarPanel(
p("Select the variable you want to plot over time:"),
selectInput("time_variable",label="Variable",choices=variables),
p("Select the lakes you want to compare:"),
selectInput("time_lake",label="Lake",choices=lakes,multiple=T)
),
#plot variable time series
mainPanel(
plotOutput("timeseriesplot")
)
), #close sidebar panel
sidebarLayout(
sidebarPanel(
p("Select the variable you want to compare between lakes and depths:"),
selectInput("depth_variable",label="Variable",choices=variables),
p("Select lakes to compare:"),
selectInput("depth_lake",label="Lake",choices=lakes,multiple=T)
),
mainPanel(
plotOutput("lake_depth_boxplot")
)
), #close sidebar panel
),
tabPanel("Exploring the role of road salt on nutrients",
sidebarLayout(
sidebarPanel(
p("Select the variable you want to plot in relation to chloride concentration:"),
selectInput("variable_chloride",label="Variable",choices=variables[1:12]), #limits choices to everything but Cl
p("Select what depth you want to look at:"),
checkboxGroupInput(inputId = "depth_chloride",
label= "Depth",
choices=depths)
), #close sidebar panel
mainPanel(
plotOutput("chloride_plot")
)
), #close sidebar layout
# sidebarLayout(
#   sidebarPanel(
#     p("Select the variable you want to plot in relation to chloride concentration:"),
#     varSelectInput(inputId = "y_variable_chloride2",
#                    label= "Variable",
#                    data= waterchem %>%
#                      select(`Chl-a (ug/L)`,
#                             `SRP (ug P/L)`,
#                             `Total Phosphorus (ug P/L)`,
#                             `Total Nitrogen (mg N/L)`,
#                             `NH4 (mg N/L)`,
#                             `NO3 + NO2 (mg N/L)`,
#                             `DIC (mg C/L)`,
#                             `DOC (mg C/L)`,
#                             `DSi (mg SiO2/L)`),
#                    selected = "Chl-a (ug/L)"),
#     ), #close sidebar panel
#   mainPanel(
#     plotOutput("chloride_plot2")
#     )
#   ) #close sidebar layout
) #close tab panel
) #close all panels
) #close UI
server <- function(input, output, session) {
output$map <- renderImage({
list(
src = file.path("Picture1.png"),
contentType = "png",
width = 1000,
height = 500
)
}, deleteFile = FALSE)
time_data <- reactive({
waterchem_v2 %>%
dplyr::filter(variable %in% input$time_variable,
Lake %in% input$time_lake)
})
output$timeseriesplot <- renderPlot({
ggplot(time_data(),aes(x=Date,y=value,color=Lake,shape=Depth))+
geom_point(size=3)+
theme_classic(base_size=14)
})
depth_data <- reactive({
waterchem_v2 %>%
dplyr::filter(variable %in% input$depth_variable,
Lake %in% input$depth_lake)
})
output$lake_depth_boxplot <- renderPlot({
ggplot(depth_data(),aes(y=value,x=Lake,color=Depth))+
geom_boxplot()+
theme_classic(base_size=14)
})
chloride_data <- reactive({
waterchem_v2 %>%
pivot_wider(names_from=variable,values_from=value) %>%
pivot_longer(!c(Lake,Date,Depth,`Cl- (mg/L)`),names_to="variable") %>%
mutate(`Cl- (mg/L)`=as.numeric(`Cl- (mg/L)`),
value=as.numeric(value)) %>%
dplyr::filter(variable %in% input$variable_chloride,
Depth %in% input$depth_chloride)
})
output$chloride_plot <- renderPlot({
ggplot(chloride_data(),aes(x=`Cl- (mg/L)`, y=value, color=Depth))+
geom_point()+
theme_classic(base_size=14)
})
# output$chloride_plot2 <- renderPlot({
#   ggplot(data= waterchem_v2,
#          aes(x=chloride_mg_L, y=!!input$y_variable_chloride2, color=Depth))+
#     geom_point()+
#     facet_wrap(~Risk_Level, nrow=2) +
#     theme_classic(base_size=14)
# }) #trying to make a plot faceted by risk level, doesn't work yet
}
shinyApp(ui, server)
shinyApp(ui, server)
glimpse(waterchem_v2)
glimpse(waterchem)
#convert to long format
waterchem_v2 <- tidyr::pivot_longer(waterchem,cols=c(4:13),names_to="variable") %>% mutate(value=as.numeric(value))
glimpse(waterchem_v2)
waterchem_v2 %>%
pivot_wider(names_from=variable,values_from=value) %>%
pivot_longer(!c(Lake,Date,Depth,`Cl- (mg/L)`),names_to="variable")
ui <- fluidPage(
titlePanel("Water chemistry data collected as part of the LCCMR - Salty Lakes project"),
tabsetPanel(
tabPanel("Site Locations",
p("There are 12 study lakes located across the Twin Cities metro area."),
imageOutput("map")
),
tabPanel("Monitoring data exploration",
#side bar layout allows you to add box on the side of the page, good for plotting
sidebarLayout(
sidebarPanel(
p("Select the variable you want to plot over time:"),
selectInput("time_variable",label="Variable",choices=variables),
p("Select the lakes you want to compare:"),
selectInput("time_lake",label="Lake",choices=lakes,multiple=T)
),
#plot variable time series
mainPanel(
plotOutput("timeseriesplot")
)
), #close sidebar panel
sidebarLayout(
sidebarPanel(
p("Select the variable you want to compare between lakes and depths:"),
selectInput("depth_variable",label="Variable",choices=variables),
p("Select lakes to compare:"),
selectInput("depth_lake",label="Lake",choices=lakes,multiple=T)
),
mainPanel(
plotOutput("lake_depth_boxplot")
)
), #close sidebar panel
),
tabPanel("Exploring the role of road salt on nutrients",
sidebarLayout(
sidebarPanel(
p("Select the variable you want to plot in relation to chloride concentration:"),
selectInput("variable_chloride",label="Variable",choices=variables[1:12]), #limits choices to everything but Cl
p("Select what depth you want to look at:"),
checkboxGroupInput(inputId = "depth_chloride",
label= "Depth",
choices=depths)
), #close sidebar panel
mainPanel(
plotOutput("chloride_plot")
)
), #close sidebar layout
# sidebarLayout(
#   sidebarPanel(
#     p("Select the variable you want to plot in relation to chloride concentration:"),
#     varSelectInput(inputId = "y_variable_chloride2",
#                    label= "Variable",
#                    data= waterchem %>%
#                      select(`Chl-a (ug/L)`,
#                             `SRP (ug P/L)`,
#                             `Total Phosphorus (ug P/L)`,
#                             `Total Nitrogen (mg N/L)`,
#                             `NH4 (mg N/L)`,
#                             `NO3 + NO2 (mg N/L)`,
#                             `DIC (mg C/L)`,
#                             `DOC (mg C/L)`,
#                             `DSi (mg SiO2/L)`),
#                    selected = "Chl-a (ug/L)"),
#     ), #close sidebar panel
#   mainPanel(
#     plotOutput("chloride_plot2")
#     )
#   ) #close sidebar layout
) #close tab panel
) #close all panels
) #close UI
server <- function(input, output, session) {
output$map <- renderImage({
list(
src = file.path("Picture1.png"),
contentType = "png",
width = 1000,
height = 500
)
}, deleteFile = FALSE)
time_data <- reactive({
waterchem_v2 %>%
dplyr::filter(variable %in% input$time_variable,
Lake %in% input$time_lake)
})
output$timeseriesplot <- renderPlot({
ggplot(time_data(),aes(x=Date,y=value,color=Lake,shape=Depth))+
geom_point(size=3)+
theme_classic(base_size=14)
})
depth_data <- reactive({
waterchem_v2 %>%
dplyr::filter(variable %in% input$depth_variable,
Lake %in% input$depth_lake)
})
output$lake_depth_boxplot <- renderPlot({
ggplot(depth_data(),aes(y=value,x=Lake,color=Depth))+
geom_boxplot()+
theme_classic(base_size=14)
})
chloride_data <- reactive({
waterchem_v2 %>%
pivot_wider(names_from=variable,values_from=value) %>%
pivot_longer(!c(Lake,Date,Depth,`Cl- (mg/L)`),names_to="variable") %>%
dplyr::filter(variable %in% input$variable_chloride,
Depth %in% input$depth_chloride)
})
output$chloride_plot <- renderPlot({
ggplot(chloride_data(),aes(x=`Cl- (mg/L)`, y=value, color=Depth))+
geom_point(size=3)+
theme_classic(base_size=14)
})
# output$chloride_plot2 <- renderPlot({
#   ggplot(data= waterchem_v2,
#          aes(x=chloride_mg_L, y=!!input$y_variable_chloride2, color=Depth))+
#     geom_point()+
#     facet_wrap(~Risk_Level, nrow=2) +
#     theme_classic(base_size=14)
# }) #trying to make a plot faceted by risk level, doesn't work yet
}
shinyApp(ui, server)
server <- function(input, output, session) {
output$map <- renderImage({
list(
src = file.path("Picture1.png"),
contentType = "png",
width = 1000,
height = 500
)
}, deleteFile = FALSE)
time_data <- reactive({
waterchem_v2 %>%
dplyr::filter(variable %in% input$time_variable,
Lake %in% input$time_lake)
})
output$timeseriesplot <- renderPlot({
ggplot(time_data(),aes(x=Date,y=value,color=Lake,shape=Depth))+
geom_point(size=3)+
theme_classic(base_size=14)
})
depth_data <- reactive({
waterchem_v2 %>%
dplyr::filter(variable %in% input$depth_variable,
Lake %in% input$depth_lake)
})
output$lake_depth_boxplot <- renderPlot({
ggplot(depth_data(),aes(y=value,x=Lake,color=Depth))+
geom_boxplot()+
theme_classic(base_size=14)
})
chloride_data <- reactive({
waterchem_v2 %>%
pivot_wider(names_from=variable,values_from=value) %>%
pivot_longer(!c(Lake,Date,Depth,`Cl- (mg/L)`),names_to="variable") %>%
dplyr::filter(variable %in% input$variable_chloride,
Depth %in% input$depth_chloride)
})
output$chloride_plot <- renderPlot({
ggplot(chloride_data(),aes(x=`Cl- (mg/L)`,y=value,color=Lake,shape=Depth))+
geom_point(size=3)+
theme_classic(base_size=14)
})
# output$chloride_plot2 <- renderPlot({
#   ggplot(data= waterchem_v2,
#          aes(x=chloride_mg_L, y=!!input$y_variable_chloride2, color=Depth))+
#     geom_point()+
#     facet_wrap(~Risk_Level, nrow=2) +
#     theme_classic(base_size=14)
# }) #trying to make a plot faceted by risk level, doesn't work yet
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Water chemistry data collected as part of the LCCMR - Salty Lakes project"),
tabsetPanel(
tabPanel("Site Locations",
p("There are 12 study lakes located across the Twin Cities metro area."),
imageOutput("map")
),
tabPanel("Monitoring data exploration",
#side bar layout allows you to add box on the side of the page, good for plotting
sidebarLayout(
sidebarPanel(
p("Select the variable you want to plot over time:"),
selectInput("time_variable",label="Variable",choices=variables),
p("Select the lakes you want to compare:"),
selectInput("time_lake",label="Lake",choices=lakes,multiple=T)
),
#plot variable time series
mainPanel(
plotOutput("timeseriesplot")
)
), #close sidebar panel
sidebarLayout(
sidebarPanel(
p("Select the variable you want to compare between lakes and depths:"),
selectInput("depth_variable",label="Variable",choices=variables),
p("Select lakes to compare:"),
selectInput("depth_lake",label="Lake",choices=lakes,multiple=T)
),
mainPanel(
plotOutput("lake_depth_boxplot")
)
), #close sidebar panel
),
tabPanel("Exploring the role of road salt on nutrients",
sidebarLayout(
sidebarPanel(
p("Select the variable you want to plot in relation to chloride concentration:"),
selectInput("lake_chloride",label="Lake",choices=lakes,multiple=T),
selectInput("variable_chloride",label="Variable",choices=variables[1:12]), #limits choices to everything but Cl
p("Select what depth you want to look at:"),
checkboxGroupInput(inputId = "depth_chloride",
label= "Depth",
choices=depths)
), #close sidebar panel
mainPanel(
plotOutput("chloride_plot")
)
), #close sidebar layout
# sidebarLayout(
#   sidebarPanel(
#     p("Select the variable you want to plot in relation to chloride concentration:"),
#     varSelectInput(inputId = "y_variable_chloride2",
#                    label= "Variable",
#                    data= waterchem %>%
#                      select(`Chl-a (ug/L)`,
#                             `SRP (ug P/L)`,
#                             `Total Phosphorus (ug P/L)`,
#                             `Total Nitrogen (mg N/L)`,
#                             `NH4 (mg N/L)`,
#                             `NO3 + NO2 (mg N/L)`,
#                             `DIC (mg C/L)`,
#                             `DOC (mg C/L)`,
#                             `DSi (mg SiO2/L)`),
#                    selected = "Chl-a (ug/L)"),
#     ), #close sidebar panel
#   mainPanel(
#     plotOutput("chloride_plot2")
#     )
#   ) #close sidebar layout
) #close tab panel
) #close all panels
) #close UI
server <- function(input, output, session) {
output$map <- renderImage({
list(
src = file.path("Picture1.png"),
contentType = "png",
width = 1000,
height = 500
)
}, deleteFile = FALSE)
time_data <- reactive({
waterchem_v2 %>%
dplyr::filter(variable %in% input$time_variable,
Lake %in% input$time_lake)
})
output$timeseriesplot <- renderPlot({
ggplot(time_data(),aes(x=Date,y=value,color=Lake,shape=Depth))+
geom_point(size=3)+
theme_classic(base_size=14)
})
depth_data <- reactive({
waterchem_v2 %>%
dplyr::filter(variable %in% input$depth_variable,
Lake %in% input$depth_lake)
})
output$lake_depth_boxplot <- renderPlot({
ggplot(depth_data(),aes(y=value,x=Lake,color=Depth))+
geom_boxplot()+
theme_classic(base_size=14)
})
chloride_data <- reactive({
waterchem_v2 %>%
pivot_wider(names_from=variable,values_from=value) %>%
pivot_longer(!c(Lake,Date,Depth,`Cl- (mg/L)`),names_to="variable") %>%
dplyr::filter(Lake %in% input$lake_chloride,
variable %in% input$variable_chloride,
Depth %in% input$depth_chloride)
})
output$chloride_plot <- renderPlot({
ggplot(chloride_data(),aes(x=`Cl- (mg/L)`,y=value,color=Lake,shape=Depth))+
geom_point(size=3)+
theme_classic(base_size=14)
})
# output$chloride_plot2 <- renderPlot({
#   ggplot(data= waterchem_v2,
#          aes(x=chloride_mg_L, y=!!input$y_variable_chloride2, color=Depth))+
#     geom_point()+
#     facet_wrap(~Risk_Level, nrow=2) +
#     theme_classic(base_size=14)
# }) #trying to make a plot faceted by risk level, doesn't work yet
}
shinyApp(ui, server)
shinyApp(ui, server)
